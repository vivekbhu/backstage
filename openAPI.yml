openapi: 3.0.0
info:
  title: Pet Store API
  description: A simple API for managing a pet store
  version: 1.0.0
servers:
  - url: https://petstore.example.com/v1
    description: Pet Store API Server

paths:
  /pets:
    get:
      summary: List all pets
      description: Returns a list of all pets available in the store.
      operationId: listPets
      tags:
        - Pets
      responses:
        '200':
          description: A list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid request
        '500':
          description: Internal server error

    post:
      summary: Add a new pet
      description: Adds a new pet to the store.
      operationId: addPet
      tags:
        - Pets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '201':
          description: Pet created successfully
        '400':
          description: Invalid input

  /pets/{petId}:
    get:
      summary: Get a pet by ID
      description: Returns a single pet by its ID.
      operationId: getPetById
      tags:
        - Pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The ID of the pet to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single pet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
        '500':
          description: Internal server error

components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        status:
          type: string
          enum:
            - available
            - pending
            - sold
      example:
        id: 1
        name: "Fluffy"
        tag: "dog"
        status: "available"

    NewPet:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
      example:
        name: "Fluffy"
        tag: "dog"
